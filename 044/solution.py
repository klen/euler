# coding: utf-8

""" Project Euler problem #44. """

import itertools as it


def problem():
    u""" Solve the problem.

    Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first
    ten pentagonal numbers are:

    1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

    It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
    70 − 22 = 48, is not pentagonal.

    Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
    difference are pentagonal and D = |Pk − Pj| is minimised; what is the
    value of D?

    Answer: 5482660

    """
    pentagons = set(n*(3*n-1)/2 for n in range(1, 2400))
    for p1, p2 in it.combinations(pentagons, 2):
        if p1+p2 in pentagons and abs(p1-p2) in pentagons:
            return abs(p1-p2)


if __name__ == '__main__':
    print problem()
